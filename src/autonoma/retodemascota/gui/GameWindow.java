/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package autonoma.retodemascota.gui;

import autonoma.retodemascota.elements.Dog;
import autonoma.retodemascota.elements.DogChaseThread;
import autonoma.retodemascota.main.Park;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.event.KeyEvent;

/**
 *
 * @author Maria Paz Puerta <mariap.puertaa@autonoma.edu.co>
 * @since 20252704
 * @version 1.0.0
 */
public class GameWindow extends javax.swing.JFrame {

    private Park park;

    /**
     * Creates new form GameWindow
     */
    public GameWindow() {
        initComponents();
        this.setSize(800, 800);
        this.setLocationRelativeTo(null);
        setFocusable(true);
        this.park = new Park(0, 0, getWidth(), getHeight());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                formMouseMoved(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseMoved
        if (park != null) {
            park.getDog().setTargetPosition(evt.getX(), evt.getY());
        
            park.checkForCroquetteEaten();
        
            repaint();
        } else {
            System.out.println("Park is not initialized.");
        }
    }//GEN-LAST:event_formMouseMoved

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        switch(evt.getKeyCode())
        {
            
            case KeyEvent.VK_A:
                park.handleKey(evt);
                
            break;
            
            case KeyEvent.VK_Q:
                exitGame();
            break;
        }
        
        repaint();
    }//GEN-LAST:event_formKeyPressed

    private void exitGame()
    {
        System.exit(0);
    }
    
    public void setPark(Park park) {
        this.park = park;
    }

    @Override
    public void paint(Graphics g) {
        Image buffer = createImage(getWidth(), getHeight());
        Graphics gBuffer = buffer.getGraphics();
        
        park.draw(gBuffer);

       
        g.drawImage(buffer, 0, 0, this);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        GameWindow window = new GameWindow();
        
        Park park = new Park(0, 0, window.getWidth(), window.getHeight());
        
        DogChaseThread thread = new DogChaseThread(park.getDog(), window);
        thread.start();
        
        window.setPark(park);
        
        window.setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
